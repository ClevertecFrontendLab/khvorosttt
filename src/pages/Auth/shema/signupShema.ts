import * as yup from 'yup';

export const schema = yup.object().shape({
    name: yup
        .string()
        .trim()
        .required('Введите имя')
        .matches(/^[А-Яа-яёЁ]/, 'Должно начинаться с кириллицы А-Я')
        .matches(/^[А-Яа-яёЁ-]+$/, 'Только кириллица А-Я, и "-"')
        .max(50, 'Максимальная длина 50 символов'),
    surname: yup
        .string()
        .trim()
        .required('Введите фамилию')
        .matches(/^[А-Яа-яёЁ]/, 'Должно начинаться с кириллицы А-Я')
        .matches(/^[А-Яа-яёЁ-]+$/, 'Только кириллица А-Я, и "-"')
        .max(50, 'Максимальная длина 50 символов'),
    email: yup
        .string()
        .trim()
        .required('Введите e-mail')
        .max(50, 'Максимальная длина 50 символов')
        .email('Введите корректный e-mail')
        .matches(/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$/, 'Введите корректный e-mail'),
    login: yup
        .string()
        .trim()
        .required('Введите логин')
        .min(5, 'Не соответствует формату')
        .max(50, 'Максимальная длина 50 символов')
        .matches(/^[A-Za-z0-9!@#$&_+-.]+$/, 'Не соответствует формату'),
    password: yup
        .string()
        .required('Введите пароль')
        .min(8, 'Не соответствует формату')
        .max(50, 'Максимальная длина 50 символов')
        .matches(/^(?=.*[A-Z])(?=.*\d)[A-Za-z0-9!@#$&_+-.]+$/, 'Не соответствует формату'),
    confirmPassword: yup
        .string()
        .required('Повторите пароль')
        .oneOf([yup.ref('password')], 'Пароли должны совпадать'),
});
